<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.oracle.pic.dlc.build</groupId>
    <artifactId>dlc-build-agent-reactor-pom</artifactId>
    <version>0.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>build-agent</artifactId>
  <packaging>${packaging}</packaging>

  <properties>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
    <packaging>jar</packaging>
    <jdk.version>1.8</jdk.version>
    <picocli.version>4.6.1</picocli.version>
    <logback.version>1.2.7</logback.version>
    <logback-encoder.version>6.6</logback-encoder.version>
    <janino.version>2.6.1</janino.version>
    <fasterxml-uuid.version>4.0.1</fasterxml-uuid.version>
    <exec.mainClass>com.oracle.pic.dlc.build.DlcBuildAgentCommand</exec.mainClass>
    <guava.version>31.0.1-jre</guava.version>
    <commons-code.version>1.15</commons-code.version>
    <apache-commons-io.version>2.11.0</apache-commons-io.version>
    <apache-commons-exec.version>1.3</apache-commons-exec.version>
    <bc-fips-version>1.0.2.1</bc-fips-version>
    <bcpkix-fips-version>1.0.5</bcpkix-fips-version>
    <jackson.version>2.13.0</jackson.version>
    <junit-jupiter.version>5.7.2</junit-jupiter.version>
    <oci-devops-service.version>0.1.196</oci-devops-service.version>
    <cc.instructions-coverage-ratio>0.85</cc.instructions-coverage-ratio>
    <cc.branch-coverage-ratio>0.84</cc.branch-coverage-ratio>
    <build-agent-startup-spec-version>0.1-SNAPSHOT</build-agent-startup-spec-version>
    <maven-compiler-version>3.8.1</maven-compiler-version>
    <maven-surefire.version>2.19.1</maven-surefire.version>
    <junit-platform-surefire-provider.version>1.1.0</junit-platform-surefire-provider.version>
    <maven-shade-version>3.2.4</maven-shade-version>
    <maven-dependency-version>2.10</maven-dependency-version>
    <lifecycle-mapping-version>1.0.0</lifecycle-mapping-version>
    <apache-commons-lang.version>3.12.0</apache-commons-lang.version>
    <javax-validation.version>2.0.1.Final</javax-validation.version>
    <hibernate-validator.version>6.2.0.Final</hibernate-validator.version>
    <glassfield-javax-el.version>3.0.0</glassfield-javax-el.version>
    <jackson-dataformat-yaml.version>2.13.0</jackson-dataformat-yaml.version>
    <commons-httpclient.version>3.1</commons-httpclient.version>
    <httpcomponents.version>4.5.13</httpcomponents.version>
    <dlc-build-service-registry-java-client.version>0.1.397</dlc-build-service-registry-java-client.version>
    <oci-java-sdk-version>2.19.1</oci-java-sdk-version>
    <resilience4j.version>1.2.0</resilience4j.version>
    <vavr.version>0.10.0</vavr.version>
    <joda-time.version>2.10.13</joda-time.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- logging dependencies    -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <exclusions>
      <exclusion>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
      </exclusion>
      </exclusions>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logback-encoder.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>${janino.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.uuid</groupId>
      <artifactId>java-uuid-generator</artifactId>
      <version>${fasterxml-uuid.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--  end of logging dependencies   -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-code.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpcomponents.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.sdk</groupId>
      <artifactId>oci-java-sdk-objectstorage</artifactId>
      <version>${oci-java-sdk-version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk15on</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcpkix-jdk15on</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.vavr</groupId>
          <artifactId>vavr</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.github.resilience4j</groupId>
          <artifactId>resilience4j-retry</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.github.resilience4j</groupId>
          <artifactId>resilience4j-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>bc-fips</groupId>
      <artifactId>bc-fips</artifactId>
      <version>${bc-fips-version}</version>
    </dependency>
    <dependency>
      <groupId>bcpkix-fips</groupId>
      <artifactId>bcpkix-fips</artifactId>
      <version>${bcpkix-fips-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${apache-commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>${apache-commons-exec.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${apache-commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dlc.build</groupId>
      <artifactId>build-agent-startup-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dlc.build</groupId>
      <artifactId>dlc-build-service-registry-java-client</artifactId>
      <version>${dlc-build-service-registry-java-client.version}</version>
      <exclusions>
      <exclusion>
        <groupId>com.oracle.oci.sdk</groupId>
        <artifactId>oci-java-sdk-common</artifactId>
      </exclusion>
        <exclusion>
          <groupId>bc-fips</groupId>
          <artifactId>bc-fips</artifactId>
        </exclusion>
        <exclusion>
          <groupId>bcpkix-fips</groupId>
          <artifactId>bcpkix-fips</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.sdk</groupId>
      <artifactId>oci-java-sdk-genericartifactscontent</artifactId>
      <version>${oci-java-sdk-version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.oracle.oci.sdk</groupId>
          <artifactId>oci-java-sdk-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dlc.build</groupId>
      <artifactId>build-agent-startup-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson-dataformat-yaml.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${javax-validation.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate-validator.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.el</artifactId>
      <version>${glassfield-javax-el.version}</version>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dlc</groupId>
      <artifactId>devops-service-java-client</artifactId>
      <version>${oci-devops-service.version}</version>
      <exclusions>
        <exclusion>
          <groupId>bc-fips</groupId>
          <artifactId>bc-fips</artifactId>
        </exclusion>
        <exclusion>
          <groupId>bcpkix-fips</groupId>
          <artifactId>bcpkix-fips</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.oracle.oci.sdk</groupId>
          <artifactId>oci-java-sdk-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.sdk</groupId>
      <artifactId>oci-java-sdk-secrets</artifactId>
      <version>${oci-java-sdk-version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcpkix-jdk15on</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.bouncycastle</groupId>
          <artifactId>bcprov-jdk15on</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.oracle.oci.sdk</groupId>
          <artifactId>oci-java-sdk-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-retry</artifactId>
      <version>${resilience4j.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
      <version>${vavr.version}</version>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.commons</groupId>
      <artifactId>core-resources</artifactId>
      <version>${pic-commons-version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dlc.build</groupId>
      <artifactId>adm-vulnerability-scan</artifactId>
      <version>0.1-SNAPSHOT</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>bcpkix-fips</groupId>
          <artifactId>bcpkix-fips</artifactId>
        </exclusion>
        <exclusion>
          <groupId>bc-fips</groupId>
          <artifactId>bc-fips</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.oracle.oci.sdk</groupId>
          <artifactId>oci-java-sdk-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-yaml</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.jersey.connectors</groupId>
          <artifactId>jersey-apache-connector</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire.version}</version>
        <configuration>
          <disableXmlReport>true</disableXmlReport>
          <redirectTestOutputToFile>false</redirectTestOutputToFile>
          <useFile>false</useFile>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${junit-platform-surefire-provider.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <!-- annotationProcessorPaths requires maven-compiler-plugin version 3.5 or higher -->
        <version>${maven-compiler-version}</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <!-- must precede micronaut-inject-java -->
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>info.picocli</groupId>
              <artifactId>picocli-codegen</artifactId>
              <version>${picocli.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-version}</version>
        <configuration>
          <!-- We shouldn't need the Dependency Reduced Pom.  Don't change it. -->
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
                <exclude>org/bouncycastle</exclude>
                <exclude>org/bouncycastle/**/*</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>${exec.mainClass}</Main-Class>
                    <Class-Path>classpath/bc-fips.jar classpath/bcpkix-fips.jar</Class-Path>
                  </manifestEntries>
                </transformer>
              </transformers>
              <artifactSet>
                <excludes>
                  <exclude>bc-fips:bc-fips</exclude>
                  <exclude>bcpkix-fips:bcpkix-fips</exclude>
                  <exclude>org.bouncycastle:bcprov-jdk15on</exclude>
                  <exclude>org.bouncycastle:bcpkix-jdk15on</exclude>
                </excludes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-version}</version>
        <executions>
          <execution>
            <id>copy</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>bc-fips</groupId>
                  <artifactId>bc-fips</artifactId>
                  <version>${bc-fips-version}</version>
                  <outputDirectory>${project.build.directory}/classpath</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>bcpkix-fips</groupId>
                  <artifactId>bcpkix-fips</artifactId>
                  <version>${bcpkix-fips-version}</version>
                  <outputDirectory>${project.build.directory}/classpath</outputDirectory>
                </artifactItem>
              </artifactItems>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
      </extension>
    </extensions>
  </build>
  <profiles>
    <profile>
      <id>profile-java-has-main-sources</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>${basedir}/src/main/java</exists>
        </file>
      </activation>
      <build>

        <pluginManagement>
          <plugins>
            <!--This plugin's configuration is used to store Eclipse m2e settings
              only. It has no influence on the Maven build itself. -->
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>${lifecycle-mapping-version}</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <versionRange>[1.9.1,)</versionRange>
                        <goals>
                          <goal>parse-version</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>

        <plugins>
          <!-- This plugin makes sure all dependencies converge to a specific version and we avoid diamond dependency problem -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>1.4.1</version>
            <executions>
              <execution>
                <id>enforce</id>
                <configuration>
                  <rules>
                    <!-- https://maven.apache.org/enforcer/enforcer-rules/dependencyConvergence.html -->
                    <DependencyConvergence/>
                    <!-- https://maven.apache.org/enforcer/enforcer-rules/requireJavaVersion.html -->
                    <requireJavaVersion>
                      <version>1.8</version>
                    </requireJavaVersion>
                    <!-- https://www.mojohaus.org/extra-enforcer-rules/banDuplicateClasses.html -->
                    <banDuplicateClasses/>
                    <!-- Ban all non FIPS bouncy castle use -->
                    <bannedDependencies>
                      <searchTransitive>true</searchTransitive>
                      <excludes>
                        <exclude>org.bouncycastle:*</exclude>
                      </excludes>
                    </bannedDependencies>
                  </rules>
                </configuration>
                <goals>
                  <goal>enforce</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>2.17</version>
            <configuration>
              <configLocation>build_config/checkstyle.xml</configLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <linkXRef>false</linkXRef>
              <violationSeverity>warning</violationSeverity>
            </configuration>
            <executions>
              <execution>
                <id>verify-style</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.14.0</version>
            <configuration>
              <linkXRef>false</linkXRef>
              <sourceEncoding>UTF-8</sourceEncoding>
              <excludeRoots>
                <excludeRoot>target/generated-sources</excludeRoot>
              </excludeRoots>
              <!-- duplicate code minimumTokens default: 100 -->
              <minimumTokens>100</minimumTokens>
              <printFailingErrors>true</printFailingErrors>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                  <goal>cpd-check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- Java code coverage -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.6</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/jacoco-reports</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>default-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                      <element>BUNDLE</element>
                      <limits>
                        <limit implementation="org.jacoco.report.check.Limit">
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${cc.instructions-coverage-ratio}</minimum>
                        </limit>
                        <limit implementation="org.jacoco.report.check.Limit">
                          <counter>BRANCH</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${cc.branch-coverage-ratio}</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>4.2.0</version>
            <configuration>
              <effort>Max</effort>
              <xmlOutput>true</xmlOutput>
              <plugins>
                <plugin>
                  <groupId>jp.skypencil.findbugs.slf4j</groupId>
                  <artifactId>bug-pattern</artifactId>
                  <version>1.4.2</version>
                </plugin>
              </plugins>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>

          <!-- This plugin normalizes the code to the same style as part of the build. See style.md for details-->
          <plugin>
            <groupId>com.theoryinpractise</groupId>
            <artifactId>googleformatter-maven-plugin</artifactId>
            <version>1.7.4</version>
            <executions>
              <execution>
                <id>reformat-sources</id>
                <configuration>
                  <includeStale>false</includeStale>
                  <style>AOSP</style>
                  <skip>false</skip>
                </configuration>
                <goals>
                  <goal>format</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>
    <!-- If there are test files, add Jupiter to dependencies -->
    <profile>
      <id>profile-java-has-test-sources</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>${basedir}/src/test/java</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-api</artifactId>
          <version>${junit-jupiter-version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-params</artifactId>
          <version>${junit-jupiter-version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <!-- Use the 'dev' profile to see stdout from unit tests in the console -->
    <profile>
      <id>dev</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <disableXmlReport>true</disableXmlReport>
              <redirectTestOutputToFile>false</redirectTestOutputToFile>
              <useFile>false</useFile>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
        The following are profiles to add the exceptions for the respective tools, if the exception file exists.
        These rely on activation based on file presence, due to which, the paths cannot be referenced using arbitrary
        properties (only basedir and a few others may be used). Hence, the paths to the files are duplicated.
    -->
    <profile>
      <id>profile-checkstyle-exception-exists</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>build_config/checkstyle-suppressions.xml</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <configuration>
                <suppressionsLocation>${basedir}/build_config/checkstyle-suppressions.xml</suppressionsLocation>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>profile-pmd-exception-exists</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>build_config/exclude-pmd.properties</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-pmd-plugin</artifactId>
              <configuration>
                <excludeFromFailureFile>${basedir}/build_config/exclude-pmd.properties</excludeFromFailureFile>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>profile-spotbugs-exception-exists</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>build_config/findbugs-exclude.xml</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs-maven-plugin</artifactId>
              <configuration>
                <excludeFilterFile>${basedir}/build_config/findbugs-exclude.xml</excludeFilterFile>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>